%turbo-frame{id: "content", data:{turbo:{action: "advance"}}}
	.container-xl.p-0.mb-4{data:{controller: "video-container"}}
		.container-lg.p-0{data:{video:{container:{target: "container"}}}}
			%video#video{data:{video:{container:{target: "video"}}}, src: video.original_upload.url, preload: "metadata", width: "100%", playsinline: "true"}
				- unless video.text_tracks.empty?
					- video.text_tracks.each do |track|
						%track{kind: "captions", srclang: track.language.short_code, label: "#{track.label} (CC)", src: video_text_track_captions_path(track.video, track), default: "true"}
			= render partial: "videos/controls/control_bar", locals: {video: video}

		.container-lg.mt-4
			%h1.mb-4 #{video.title}	

			- unless video.text_tracks.empty?
				- unless video.text_tracks.first.audio_descriptions.empty?
					%p There are Audio Descriptions.  You can listen to them here.
					- video.text_tracks.first.audio_descriptions.each_with_index do |a, i|
						.border.border-dark
							.p-2.bg-dark.text-light.ps-4.pe-4 #{i + 1}.  #{a.start.strftime('%H:%M:%S.%L')}
						
							.p-4
								%h2 Original Text
								%p #{a.payload.join(" ")}

								%h2 Synthesize Text
								%p #{a.synthesize_text}
						
							.row.p-4
								- a.synthesize_speech_clips.each do |s|
									.col-3.border.border-dark.p-4
										- case s.voice_name
											-when "en-US-Studio-M"
												%p Name: Studio Male
											- when "en-US-Studio-O"
												%p Name: Studio Female
											- when "en-US-Neural2-D"
												%p Name: Neural2 Male
											- when "en-US-Neural2-F"
												%p Name: Neural2 Female

										%audio{src: s.audio_file.url, controls: "true"}

		
		- if video.chroma_keyed?
			%p Chroma-Keyed
			

			%h2 Solid Backgrounds
			.d-flex
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "red"}}}, action: "click->video-container#setBackground"} } Red
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "teal"}}}, action: "click->video-container#setBackground"} } Teal
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "brown"}}}, action: "click->video-container#setBackground"} } Brown
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "black"}}}, action: "click->video-container#setBackground"} } Black
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "gray"}}}, action: "click->video-container#setBackground"} } Gray
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "blue"}}}, action: "click->video-container#setBackground"} } Blue
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "gold"}}}, action: "click->video-container#setBackground"} } Gold
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "silver"}}}, action: "click->video-container#setBackground"} } Silver
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "purple"}}}, action: "click->video-container#setBackground"} } Purple
				%button.m-4.btn-dark.btn.btn-lg{type: "button", data:{video:{container:{color:{param: "pink"}}}, action: "click->video-container#setBackground"} } Pink
					

			%h2 Curtain Backgrounds
			%p Not yet developed

			%h2 Color Wheel
			%p If the solid color options we decide on aren't enough for the end user, they can choose it from the color wheel here.
			.d-flex
				%label.form-label{for: "colorPicker"} Color Picker
				%input#colorPicker.form-control.form-control-color{type: "color", data:{video:{container:{target: "wheel", picker:{param: "changed"}}}, action: "input->video-container#setBackground"}}

			%h2 Quality
			%p Will incorporate once the rendering of speed and framerate is determined.  Available in 480p, 720p, 1080p and 4K, whichever is less than the original upload.  So if one uploads 1080p, then only 720p and 480p will also be produced.